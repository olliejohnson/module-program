plugins {
    id "java"
    id "application"
    id "com.gradleup.shadow" version "9.0.0-rc1"
    id "maven-publish"
}

group = "io.oliverj"
version = "0.0.1"

java {
    //withJavadocJar()
    withSourcesJar()
}

//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            artifactId = "module-program"
//            from components.java
//            pom {
//                name = "Module Program"
//                description = "A loader and api for a modular plugin system"
//                developers {
//                    developer {
//                        id = "olliejohnson"
//                        name = "Oliver Johnson"
//                        email = "oliver@oliverj.io"
//                    }
//                }
//            }
//        }
//    }
//    repositories {
//        maven {
//            credentials {
//                username = "$usr"
//                password = "$pwd"
//            }
//            url = "http://localhost/releases"
//            allowInsecureProtocol = true
//        }
//    }
//}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.apache.logging.log4j:log4j-api:2.24.1")
    implementation("org.apache.logging.log4j:log4j-core:2.24.1")
    implementation project(":api")

    implementation("org.jetbrains:annotations:24.0.0")
    implementation("com.google.code.gson:gson:2.13.1")

    implementation("io.netty:netty-all:4.2.2.Final")
}

application {
    mainModule = "io.oliverj.module"
    mainClass = "io.oliverj.module.Runner"
}

jar {
    manifest {
        attributes(
                "Main-Class": "io.oliverj.module.Runner"
        )
    }
}

tasks.register("copyDemoPlugin", Copy) {
    from 'demo-plugin/build/libs/demo-plugin-0.0.1.jar'
    into 'run/plugins'
    dependsOn project(":demo-plugin").tasks.named("jar")
}

tasks.register("copyRunner", Copy) {
    from 'build/libs/module-program-0.0.1-all.jar'
    into 'run'
    dependsOn shadowJar
}

tasks.register("runDemo", JavaExec) {
    dependsOn build
    dependsOn copyDemoPlugin
    dependsOn copyRunner

    classpath = files("run/module-program-0.0.1-all.jar")
    classpath += sourceSets.main.runtimeClasspath
    mainClass = "io.oliverj.module.Runner"
}